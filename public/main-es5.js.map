{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/@core/core.module.ts","webpack:///src/app/@core/http/api-prefix.interceptor.ts","webpack:///src/app/@core/http/error-handler.interceptor.ts","webpack:///src/app/@core/index.ts","webpack:///src/app/@core/logger.service.ts","webpack:///src/app/@core/route-reusable-strategy.ts","webpack:///src/app/@core/until-destroyed.ts","webpack:///src/app/@shared/index.ts","webpack:///src/app/@shared/loader/loader.component.ts","webpack:///src/app/@shared/loader/loader.component.html","webpack:///src/app/@shared/shared.module.ts","webpack:///src/app/about/about-routing.module.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/about/about.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/quote.service.ts","webpack:///src/app/i18n/i18n.module.ts","webpack:///src/app/i18n/i18n.service.ts","webpack:///src/app/i18n/index.ts","webpack:///src/app/i18n/language-selector.component.ts","webpack:///src/app/i18n/language-selector.component.html","webpack:///src/app/multiplos/multiplos-routing.module.ts","webpack:///src/app/multiplos/multiplos.component.ts","webpack:///src/app/multiplos/multiplos.component.html","webpack:///src/app/multiplos/multiplos.module.ts","webpack:///src/app/services/multiplos.service.ts","webpack:///src/app/shell/header/header.component.ts","webpack:///src/app/shell/header/header.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.module.ts","webpack:///src/app/shell/shell.service.ts","webpack:///src/environments/.env.ts","webpack:///src/environments/environment.ts","webpack:///src/hmr.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CoreModule","parentModule","provide","useClass","multi","imports","providers","ApiPrefixInterceptor","request","next","test","url","clone","serverUrl","handle","providedIn","log","ErrorHandlerInterceptor","pipe","error","errorHandler","response","production","LogLevel","Logger","source","objects","console","Debug","info","Info","warn","Warning","func","level","concat","apply","outputs","forEach","output","RouteReusableStrategy","route","detachedTree","future","curr","routeConfig","data","reuse","untilDestroyedSymbol","Symbol","untilDestroyed","instance","destroyMethodName","originalDestroy","hasDestroyFunction","constructor","name","arguments","complete","LoaderComponent","isLoading","selector","templateUrl","styleUrls","SharedModule","declarations","routes","childRoutes","path","component","title","AboutRoutingModule","forChild","AboutComponent","version","AboutModule","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","router","activatedRoute","titleService","translateService","i18nService","enableProductionMode","debug","init","defaultLanguage","supportedLanguages","onNavigationEnd","events","event","onLangChange","firstChild","outlet","subscribe","setTitle","instant","destroy","AppModule","bootstrap","HomeRoutingModule","HomeComponent","quoteService","getRandomQuote","category","quote","HomeModule","c","QuoteService","httpClient","context","get","body","value","I18nModule","languageKey","extract","s","I18nService","setTranslation","language","langChangeSubscription","localStorage","setItem","lang","unsubscribe","getItem","getBrowserCultureLang","isSupportedLanguage","includes","split","find","supportedLanguage","startsWith","Boolean","use","currentLang","LanguageSelectorComponent","inNavbar","menuClass","MultiplosRoutingModule","MultiplosComponent","_ms","multiplo3","multiplo5","multiplo7","multiplos","primerMultiplo","crearFormulario","consultarMultiplos","formMultiplo","userNumber","required","maxLength","obtenerMultiplos","resp","mult","numeroUsuario","JSON","parse","i","dividir3","dividir5","dividir7","push","setValue","rq","getRawValue","guardarMultiplo","reset","MultiplosModule","MultiplosService","http","post","crearArreglo","Object","key","multiplo","HeaderComponent","menuHidden","toggleMenu","ShellComponent","ShellModule","Shell","children","env","environment","hmr","npm_package_version","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","hmrBootstrap","ngModule","hot","accept","mod","err","dispose","appRef","injector","elements","components","map","location","nativeElement","makeVisible","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, TranslateModule, RouterModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError((error) => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n}\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from './until-destroyed';\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n}\n","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\n\n/**\n * RxJS operator that unsubscribe from observables on destory.\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\n *\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\n * operator chain.\n *\n * @param instance The parent Angular component or object instance.\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\n * @example\n * ```\n * import { untilDestroyed } from '@core';\n *\n * @Component({\n * selector: 'app-example',\n *   templateUrl: './example.component.html'\n * })\n * export class ExampleComponent implements OnInit, OnDestroy {\n *   ngOnInit() {\n *     interval(1000)\n *       .pipe(untilDestroyed(this))\n *       .subscribe(val => console.log(val));\n *   }\n *\n *   // This method must be present, even if empty.\n *   ngOnDestroy() {\n *     // To protect you, an error will be thrown if it doesn't exist.\n *   }\n * }\n * ```\n */\nexport function untilDestroyed(instance: object, destroyMethodName: string = 'ngOnDestroy') {\n  return <T>(source: Observable<T>) => {\n    const originalDestroy = instance[destroyMethodName];\n    const hasDestroyFunction = typeof originalDestroy === 'function';\n\n    if (!hasDestroyFunction) {\n      throw new Error(\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n      );\n    }\n\n    if (!instance[untilDestroyedSymbol]) {\n      instance[untilDestroyedSymbol] = new Subject();\n\n      instance[destroyMethodName] = function () {\n        if (hasDestroyFunction) {\n          originalDestroy.apply(this, arguments);\n        }\n        instance[untilDestroyedSymbol].next();\n        instance[untilDestroyedSymbol].complete();\n      };\n    }\n\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\n  };\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/i18n';\nimport { Shell } from '@app/shell/shell.service';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  Shell.childRoutes([{ path: 'about', component: AboutComponent, data: { title: extract('About') } }]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AboutRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit {\n  version: string | null = environment.version;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"container-fluid\">\n  <div class=\"jumbotron text-center\">\n    <h1>\n      <span translate>APP_NAME</span>\n    </h1>\n    <p><i class=\"far fa-bookmark\"></i> <span translate>Version</span> {{ version }}</p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AboutRoutingModule } from './about-routing.module';\nimport { AboutComponent } from './about.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, AboutRoutingModule],\n  declarations: [AboutComponent],\n})\nexport class AboutModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, untilDestroyed } from '@core';\nimport { I18nService } from '@app/i18n';\n\nconst log = new Logger('App');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService\n  ) {}\n\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter((event) => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter((route) => route.outlet === 'primary'),\n        switchMap((route) => route.data),\n        untilDestroyed(this)\n      )\n      .subscribe((event) => {\n        const title = event.title;\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.i18nService.destroy();\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { HomeModule } from './home/home.module';\nimport { ShellModule } from './shell/shell.module';\nimport { AboutModule } from './about/about.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MultiplosModule } from './multiplos/multiplos.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    NgbModule,\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule,\n    MultiplosModule,\n    AboutModule,\n    AppRoutingModule, // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/i18n';\nimport { HomeComponent } from './home.component';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: extract('Home') } },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class HomeRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { QuoteService } from './quote.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  quote: string | undefined;\n  isLoading = false;\n\n  constructor(private quoteService: QuoteService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.quoteService\n      .getRandomQuote({ category: 'dev' })\n      .pipe(\n        finalize(() => {\n          this.isLoading = false;\n        })\n      )\n      .subscribe((quote: string) => {\n        this.quote = quote;\n      });\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"jumbotron text-center\">\n    <h1>\n      <img class=\"logo\" src=\"assets/ngx-rocket-logo.png\" alt=\"angular logo\" />\n      <span translate>Hello world !</span>\n    </h1>\n    <app-loader [isLoading]=\"isLoading\"></app-loader>\n    <q [hidden]=\"isLoading\">{{ quote }}</q>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { QuoteService } from './quote.service';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, CoreModule, SharedModule, HomeRoutingModule],\n  declarations: [HomeComponent],\n})\nexport class HomeModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nconst routes = {\n  quote: (c: RandomQuoteContext) => `/jokes/random?category=${c.category}`,\n};\n\nexport interface RandomQuoteContext {\n  // The quote's category: 'dev', 'explicit'...\n  category: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteService {\n  constructor(private httpClient: HttpClient) {}\n\n  getRandomQuote(context: RandomQuoteContext): Observable<string> {\n    return this.httpClient.get(routes.quote(context)).pipe(\n      map((body: any) => body.value),\n      catchError(() => of('Error, could not load joke :-('))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LanguageSelectorComponent } from './language-selector.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, NgbModule],\n  declarations: [LanguageSelectorComponent],\n  exports: [LanguageSelectorComponent],\n})\nexport class I18nModule {}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Logger } from '@core/logger.service';\nimport enUS from '../../translations/en-US.json';\nimport esES from '../../translations/es-ES.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param s The string to extract for translation.\n * @return The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nService {\n  defaultLanguage!: string;\n  supportedLanguages!: string[];\n\n  private langChangeSubscription!: Subscription;\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n    translateService.setTranslation('es-ES', esES);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    // Warning: this subscription will always be alive for the app's lifetime\n    this.langChangeSubscription = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      localStorage.setItem(languageKey, event.lang);\n    });\n  }\n\n  /**\n   * Cleans up language change subscription.\n   */\n  destroy() {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find((supportedLanguage) => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n}\n","export * from './i18n.module';\nexport * from './i18n.service';\nexport * from './language-selector.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { I18nService } from './i18n.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\n})\nexport class LanguageSelectorComponent implements OnInit {\n  @Input() inNavbar = false;\n  @Input() menuClass = '';\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {}\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n}\n","<div [ngClass]=\"{ 'nav-item': inNavbar }\" ngbDropdown>\n  <a *ngIf=\"inNavbar; else button\" id=\"language-dropdown\" class=\"nav-link\" ngbDropdownToggle>\n    {{ currentLanguage | translate }}\n  </a>\n  <ng-template #button>\n    <button id=\"language-dropdown\" class=\"btn btn-sm btn-secondary\" ngbDropdownToggle>\n      {{ currentLanguage }}\n    </button>\n  </ng-template>\n  <div ngbDropdownMenu aria-labelledby=\"language-dropdown\" [ngClass]=\"menuClass\">\n    <button class=\"dropdown-item\" *ngFor=\"let language of languages\" (click)=\"setLanguage(language)\">\n      {{ language | translate }}\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/i18n';\nimport { MultiplosComponent } from './multiplos.component';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'Multiplos', component: MultiplosComponent, data: { title: extract('multiplos') } },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class MultiplosRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { MultiplosService } from '../services/multiplos.service';\n\n@Component({\n  selector: 'app-multiplos',\n  templateUrl: './multiplos.component.html',\n  styleUrls: ['./multiplos.component.scss'],\n})\nexport class MultiplosComponent implements OnInit {\n  formMultiplo: FormGroup;\n  multiplo3: any[] = [];\n  multiplo5: any[] = [];\n  multiplo7: any[] = [];\n  multiplos: any[] = [];\n  primerMultiplo: boolean = false;\n\n  constructor(private _ms: MultiplosService) {}\n\n  ngOnInit(): void {\n    this.crearFormulario();\n    this.consultarMultiplos();\n  }\n\n  crearFormulario() {\n    this.formMultiplo = new FormGroup({\n      id: new FormControl(''),\n      userNumber: new FormControl('', [Validators.required, Validators.maxLength(2)]),\n      multiplo3: new FormControl(''),\n      multiplo5: new FormControl(''),\n      multiplo7: new FormControl(''),\n    });\n  }\n\n  consultarMultiplos() {\n    this._ms.obtenerMultiplos().subscribe((resp: any) => {\n      this.multiplos = resp;\n      console.log(resp);\n      this.multiplos.forEach((mult) => {\n        if (mult.multiplo3 != '') {\n          this.primerMultiplo = true;\n        }\n      });\n    });\n  }\n\n  obtenerMultiplos() {\n    console.log(this.formMultiplo.value);\n    let numeroUsuario = this.formMultiplo.get('userNumber').value;\n    numeroUsuario = JSON.parse(numeroUsuario);\n\n    //recorrido variable ingresada por usuario\n    for (let i = 0; i < numeroUsuario; i++) {\n      let dividir3 = i % 3;\n      let dividir5 = i % 5;\n      let dividir7 = i % 7;\n\n      //validación si es multiplo\n      if (dividir3 == 0) {\n        //si lo es, se empuj aL arreglo correspondiente a través de un form control hacia un formArray\n        this.multiplo3.push(i);\n        this.formMultiplo.get('multiplo3').setValue(this.multiplo3);\n      } else if (dividir5 == 0) {\n        this.multiplo5.push(i);\n        this.formMultiplo.get('multiplo5').setValue(this.multiplo5);\n      } else if (dividir7 == 0) {\n        this.multiplo7.push(i);\n        this.formMultiplo.get('multiplo7').setValue(this.multiplo7);\n      }\n    }\n\n    let rq = this.formMultiplo.getRawValue();\n    rq.userNumber = JSON.parse(rq.userNumber);\n    console.log(this.formMultiplo.value);\n    this._ms.guardarMultiplo(rq).subscribe((resp: any) => {\n      rq.id = resp.name;\n      this.consultarMultiplos();\n      this.multiplo3 = [];\n      this.multiplo5 = [];\n      this.multiplo7 = [];\n      this.formMultiplo.reset();\n    });\n  }\n}\n","<div class=\"row container\">\n  <div class=\"col-md-12\">\n    <form class=\"form-inline\" [formGroup]=\"formMultiplo\">\n      <div class=\"form-group mb-2\">\n        <label>Número</label>\n      </div>\n      <div class=\"form-group mx-sm-3 mb-2\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Sólo números\" formControlName=\"userNumber\" maxlength=\"2\" />\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-primary mb-2\"\n        (click)=\"obtenerMultiplos()\"\n        [disabled]=\"this.formMultiplo.invalid\"\n      >\n        Guardar\n      </button>\n    </form>\n\n    <div class=\"row\">\n      <div class=\"container\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>User number</th>\n              <th class=\"text-success\">Multiplos 3</th>\n              <th class=\"text-danger\">Multiplos 5</th>\n              <th class=\"text-primary\">Multiplos 7</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let multiplo of multiplos\">\n              <th [ngClass]=\"multiplo.userNumber != 0 ? 'text-success' : 'mb-0'\">{{ multiplo.userNumber }}</th>\n              <td class=\"text-success\">{{ multiplo.multiplo3 }}</td>\n              <td class=\"text-danger\">{{ multiplo.multiplo5 }}</td>\n              <td class=\"text-primary\">{{ multiplo.multiplo7 }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//http\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { MultiplosRoutingModule } from './multiplos-routing.module';\nimport { MultiplosComponent } from './multiplos.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MultiplosRoutingModule,\n    HttpClientModule,\n  ],\n  declarations: [MultiplosComponent],\n})\nexport class MultiplosModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiplosService {\n  private url = 'https://numerosm-1f94a.firebaseio.com';\n\n  constructor(private http: HttpClient) {}\n\n  guardarMultiplo(data: any) {\n    return this.http.post(`${this.url}/multiplos.json`, data);\n  }\n\n  obtenerMultiploId(id: any) {\n    return this.http.get(`${this.url}/multiplos/${id}`);\n  }\n\n  obtenerMultiplos() {\n    return this.http.get(`${this.url}/multiplos.json`).pipe(map((resp) => this.crearArreglo(resp)));\n  }\n\n  crearArreglo(data: any) {\n    const multiplos: any[] = [];\n\n    Object.keys(data).forEach((key) => {\n      const multiplo: any = data[key];\n      multiplo.id = key;\n      multiplos.push(multiplo);\n    });\n\n    return multiplos;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  menuHidden = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleMenu() {\n    this.menuHidden = !this.menuHidden;\n  }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"https://github.com/ngx-rocket\" translate>APP_NAME</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      aria-controls=\"navbar-menu\"\n      aria-label=\"Toggle navigation\"\n      (click)=\"toggleMenu()\"\n      [attr.aria-expanded]=\"!menuHidden\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbar-menu\" class=\"collapse navbar-collapse float-xs-none\" [ngbCollapse]=\"menuHidden\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/home\" routerLinkActive=\"active\">\n          <i class=\"fas fa-home\"></i>\n          <span translate>Home</span>\n        </a>\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/Multiplos\" routerLinkActive=\"active\">\n          <i class=\"fas fa-home\"></i>\n          <span translate>Multiplo</span>\n        </a>\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/about\" routerLinkActive=\"active\">\n          <i class=\"fas fa-question-circle\"></i>\n          <span translate>About</span>\n        </a>\n      </div>\n      <div class=\"navbar-nav ml-auto\">\n        <app-language-selector inNavbar=\"true\" menuClass=\"dropdown-menu dropdown-menu-right\"></app-language-selector>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { ShellComponent } from './shell.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, NgbModule, I18nModule, RouterModule],\n  declarations: [HeaderComponent, ShellComponent],\n})\nexport class ShellModule {}\n","import { Routes, Route } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Shell {\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return The new route using shell as the base.\n   */\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true },\n    };\n  }\n}\n","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '1.0.0'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// `.env.ts` is generated by the `npm run env` command\n// `npm run env` exposes environment variables as JSON for any usage you might\n// want, like displaying the version or getting extra config from your CI bot, etc.\n// This is useful for granularity you might need beyond just the environment.\n// Note that as usual, any environment variables you expose through it will end up in your\n// bundle, and you should not use it for any sensitive information like passwords or keys.\nimport { env } from './.env';\n\nexport const environment = {\n  production: false,\n  hmr: true,\n  version: env.npm_package_version + '-dev',\n  serverUrl: '/api',\n  defaultLanguage: 'en-US',\n  supportedLanguages: ['en-US', 'es-ES'],\n  firebaseConfig : {\n    apiKey: \"AIzaSyCNLW8eXLSu6tpl2mt7VTsuyR91PzffnTM\",\n    authDomain: \"numerosm-1f94a.firebaseapp.com\",\n    databaseURL: \"https://numerosm-1f94a.firebaseio.com\",\n    projectId: \"numerosm-1f94a\",\n    storageBucket: \"numerosm-1f94a.appspot.com\",\n    messagingSenderId: \"857480746060\",\n    appId: \"1:857480746060:web:fffd6271d487ec297e50e9\",\n    measurementId: \"G-ZTYHL922JK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, NgModuleRef, ApplicationRef } from '@angular/core';\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport function hmrBootstrap(module: any, bootstrap: () => Promise<NgModuleRef<any>>) {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n\n  bootstrap()\n    .then((mod) => (ngModule = mod))\n    .catch((err) => console.error(err));\n\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map((c) => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}\n","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@app/app.module';\nimport { environment } from '@env/environment';\nimport { hmrBootstrap } from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n  hmrBootstrap(module, bootstrap);\n} else {\n  bootstrap().catch((err) => console.error(err));\n}\n"]}